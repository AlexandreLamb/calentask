version: '3.7'

services:

    client:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        tty: true
        ports:
            - "80:80"
        environment:
            REACT_APP_FLASK_URL: "http://$HOSTNAME:5000/"
        volumes: 
            - ./frontend:/frontend
            - /app/node_modules
            - appdata:/data/
        networks:
            - frontend
        restart: always
    

    mongodb:
        image: mongo:bionic
        container_name: mongo
        restart: always
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: "fatigue"
            MONGO_INITDB_ROOT_PASSWORD: "fatigue1234"
            MONGO_INITDB_DATABASE: fatigueSurvey
            MONGODB_DATA_DIR: /data/db
            ports:
                -"27017:27017"
        volumes:
            - mongodbdata:/data/db
        networks:
            - backend        
    api:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        command: flask run --host=0.0.0.0
        #command: gunicorn --bind 0.0.0.0:5000 srv:app
        ports:
            - "5000:5000"
        environment:
            MONGODB_HOST: mongodb
            MONGODB_USERNAME: "fatigue"
            MONGODB_PASSWORD: "fatigue1234"
            MONGODB_DB: "fatigueSurvey"
            MONGODB_PORT: 27017
            FLASK_APP: "srv.py"
            FLASK_ENV: "development"
        volumes:
            - ./backend:/backend
            - ./frontend:/frontend
            - appdata:/data/
        depends_on: 
            - mongodb
        networks:
            - frontend
            - backend
        restart: always

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local